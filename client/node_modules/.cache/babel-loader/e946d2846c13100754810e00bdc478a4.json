{"ast":null,"code":"var _jsxFileName = \"/home/sherif/code/crypto/bridge/react/client/src/components/Tickets.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { getWeb3 } from \"../getWeb3\";\nimport map from \"../artifacts/deployments/map.json\";\nimport { getEthereum } from \"../getEthereum\";\nimport { getContract } from \"../getContract\";\nimport { GlobalContext } from '../context/GlobalState';\n\nconst Tickets = () => {\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    async function fetchTransactions() {\n      try {\n        let contract = await getContract();\n        console.log(contract);\n        let events = await contract.getPastEvents(\"Ticket\", {\n          fromBlock: 1\n        });\n        console.log(events.map(e => e['returnValues']));\n        setTransactions(events.map(e => e['returnValues']));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchTransactions();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Recent Tickets\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Ticket\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"First Transaction Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Last Transaction Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"State Root\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, transactions.map((transaction, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, transaction['ticket']), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, transaction['firstIdForTicket']), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, transaction['lastIdForTicket']), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, transaction['stateRoot']))))));\n};\n\nexport default Tickets;","map":{"version":3,"sources":["/home/sherif/code/crypto/bridge/react/client/src/components/Tickets.js"],"names":["React","useState","useContext","useEffect","getWeb3","map","getEthereum","getContract","GlobalContext","Tickets","transactions","setTransactions","fetchTransactions","contract","console","log","events","getPastEvents","fromBlock","e","transaction","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,OAAO,yDAAP;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,mCAAhB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,SAAQC,aAAR,QAA4B,wBAA5B;;AAGA,MAAMC,OAAO,GAAI,MAAM;AACrB,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAA/C;AACAE,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,iBAAf,GAAkC;AAChC,UAAG;AACD,YAAIC,QAAQ,GAAI,MAAMN,WAAW,EAAjC;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAIG,MAAM,GAAG,MAAMH,QAAQ,CAACI,aAAT,CAAuB,QAAvB,EAAiC;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAjC,CAAnB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACX,GAAP,CAAYc,CAAD,IAAMA,CAAC,CAAC,cAAD,CAAlB,CAAZ;AACAR,QAAAA,eAAe,CAACK,MAAM,CAACX,GAAP,CAAYc,CAAD,IAAMA,CAAC,CAAC,cAAD,CAAlB,CAAD,CAAf;AACD,OAND,CAMC,OAAMA,CAAN,EAAQ;AACPL,QAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACD;AACF;;AACCP,IAAAA,iBAAiB;AACpB,GAbQ,EAaN,EAbM,CAAT;AAeA,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,eAGE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,eAIE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADJ,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,YAAY,CAACL,GAAb,CAAiB,CAACe,WAAD,EAAaC,KAAb,kBACd;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,WAAW,CAAC,QAAD,CAAhB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,WAAW,CAAC,kBAAD,CAAhB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,WAAW,CAAC,iBAAD,CAAhB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,WAAW,CAAC,WAAD,CAAhB,CAJF,CADH,CADL,CATF,CAFJ,CAFF;AA0BD,CA3CD;;AA6CA,eAAeX,OAAf","sourcesContent":["import React, {useState,useContext,useEffect} from \"react\"\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {getWeb3} from \"../getWeb3\"\nimport map from \"../artifacts/deployments/map.json\"\nimport {getEthereum} from \"../getEthereum\"\nimport {getContract} from \"../getContract\"\nimport {GlobalContext} from '../context/GlobalState';\n\n\nconst Tickets =  () => {\n  const[transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    async function fetchTransactions(){\n      try{\n        let contract =  await getContract()\n        console.log(contract)\n        let events = await contract.getPastEvents(\"Ticket\", { fromBlock: 1})\n        console.log(events.map((e) =>e['returnValues']))\n        setTransactions(events.map((e) =>e['returnValues']))\n      }catch(e){\n        console.log(e)\n      }\n    }\n      fetchTransactions()\n  }, [])\n\n  return (\n    \n    <div>\n        <h3>Recent Tickets</h3>\n        <table className=\"table table-striped\">\n          <thead>\n              <tr>\n                <th scope=\"col\">Ticket</th>\n                <th scope=\"col\">First Transaction Id</th>\n                <th scope=\"col\">Last Transaction Id</th>\n                <th scope=\"col\">State Root</th>\n              </tr>\n          </thead>\n          <tbody>\n              {transactions.map((transaction,index)=>(\n                  <tr key={index}>\n                    <td>{transaction['ticket']}</td>\n                    <td>{transaction['firstIdForTicket']}</td>\n                    <td>{transaction['lastIdForTicket']}</td>\n                    <td>{transaction['stateRoot']}</td>\n                  </tr>\n              ))}\n          </tbody>\n        </table>\n    </div>\n  )\n}\n\nexport default Tickets"]},"metadata":{},"sourceType":"module"}