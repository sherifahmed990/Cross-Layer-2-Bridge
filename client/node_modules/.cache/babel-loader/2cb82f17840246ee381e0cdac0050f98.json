{"ast":null,"code":"var _jsxFileName = \"/home/sherif/code/crypto/bridge/react/client/src/components/Transactions.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { getWeb3 } from \"../getWeb3\";\nimport map from \"../artifacts/deployments/map.json\";\nimport { getEthereum } from \"../getEthereum\";\nimport { getContract } from \"../getContract\";\nimport { GlobalContext } from '../context/GlobalState';\n\nconst Transactions = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [transactionHashs, settransactionHashs] = useState([]);\n  const {\n    currencies\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    async function fetchTransactions() {\n      try {\n        let contract = await getContract();\n        console.log(contract);\n        let events = await contract.getPastEvents(\"Transaction\", {\n          fromBlock: 1\n        });\n        console.log(events.map(e => e));\n        setTransactions(events.map(e => e['returnValues'][0]));\n        settransactionHashs(events.map(e => e['transactionHash']));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchTransactions();\n  }, [transactions.length]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Recent Transactions\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Token\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Destination Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Link\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, transactions.map((transaction, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, transaction[1]), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, transaction[2]), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Pending Bounty\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://kovan-optimistic.etherscan.io/tx/\" + transactionHashs[index],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Link\")))))));\n};\n\nfunction GetCurrencyName(currencies, transaction) {\n  return /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, currencies.find(currency => currency.address === transaction).name);\n}\n\nexport default Transactions;","map":{"version":3,"sources":["/home/sherif/code/crypto/bridge/react/client/src/components/Transactions.js"],"names":["React","useState","useContext","useEffect","getWeb3","map","getEthereum","getContract","GlobalContext","Transactions","transactions","setTransactions","transactionHashs","settransactionHashs","currencies","fetchTransactions","contract","console","log","events","getPastEvents","fromBlock","e","length","transaction","index","GetCurrencyName","find","currency","address","name"],"mappings":"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","sourcesContent":["import React, {useState,useContext,useEffect} from \"react\"\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {getWeb3} from \"../getWeb3\"\nimport map from \"../artifacts/deployments/map.json\"\nimport {getEthereum} from \"../getEthereum\"\nimport {getContract} from \"../getContract\"\nimport {GlobalContext} from '../context/GlobalState';\n\n\nconst Transactions =  () => {\n  const[transactions, setTransactions] = useState([]);\n  const[transactionHashs, settransactionHashs] = useState([]);\n  const {currencies} = useContext(GlobalContext);\n\n\n  useEffect(() => {\n    async function fetchTransactions(){\n      try{\n        let contract =  await getContract()\n        console.log(contract)\n        let events = await contract.getPastEvents(\"Transaction\", { fromBlock: 1})\n        console.log(events.map((e) =>e))\n        \n        setTransactions(events.map((e) =>e['returnValues'][0]))\n        settransactionHashs(events.map((e) =>e['transactionHash']))\n      }\n      catch(e){\n        console.log(e)\n      }\n    }\n    fetchTransactions()\n  }, [transactions.length])\n\n  return (\n    \n    <div>\n        <h2>Recent Transactions</h2>\n\n        <table className=\"table table-striped\">\n          <thead>\n              <tr>\n                <th scope=\"col\">Token</th>\n                <th scope=\"col\">Destination Address</th>\n                <th scope=\"col\">Amount</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\">Link</th>\n              </tr>\n          </thead>\n          <tbody>\n              {transactions.map((transaction,index)=>(\n                  <tr key={index}>\n                    <td>{transaction[1]}</td>\n                    <td>{transaction[2]}</td>\n                    <td>Pending Bounty</td>\n                    <td><a href={\"https://kovan-optimistic.etherscan.io/tx/\" + transactionHashs[index]}>Link</a></td>\n                  </tr>\n              ))}\n          </tbody>\n        </table>\n    </div>\n  )\n}\n\nfunction GetCurrencyName(currencies,transaction) {\n  return (\n    <td>{currencies.find(currency => currency.address === transaction).name}</td>\n  );\n}\n\nexport default Transactions"]},"metadata":{},"sourceType":"module"}