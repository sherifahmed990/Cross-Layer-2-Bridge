{"ast":null,"code":"import { getWeb3 } from \"../getWeb3\";\nimport { getEthereum } from \"../getEthereum\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case 'CONNECT_TO_WALLET':\n      return { ...state,\n        accounts: connectToWallet()\n      };\n\n    default:\n      return state;\n  }\n});\n\nasync function connectToWallet() {\n  // Get network provider and web3 instance.\n  const web3 = await getWeb3(); // Try and enable accounts (connect metamask)\n\n  const ethereum = await getEthereum();\n\n  try {\n    //const ethereum = await getEthereum()\n    ethereum.enable();\n    console.log(`Metamask`);\n    const accounts = await ethereum.request({\n      method: 'eth_requestAccounts'\n    }); // Get the current chain id\n\n    const chainid = parseInt((await web3.eth.getChainId()));\n    return accounts;\n  } catch (e) {\n    console.log(`Could not enable accounts. Interaction with contracts not available.\n        Use a modern browser with a Web3 plugin to fix this issue.`);\n    console.log(e);\n  } //const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n  // Get the current chain id\n  //const chainid = parseInt(await web3.eth.getChainId())\n\n}","map":{"version":3,"sources":["/home/sherif/code/crypto/bridge/react/client/src/context/AppReducer.js"],"names":["getWeb3","getEthereum","state","action","type","accounts","connectToWallet","web3","ethereum","enable","console","log","request","method","chainid","parseInt","eth","getChainId","e"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AAEA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAC7B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,mBAAL;AACI,aAAM,EACF,GAAGF,KADD;AAEFG,QAAAA,QAAQ,EAAEC,eAAe;AAFvB,OAAN;;AAIJ;AACI,aAAOJ,KAAP;AAPR;AASH,CAVD;;AAYA,eAAeI,eAAf,GAAgC;AAC5B;AACA,QAAMC,IAAI,GAAG,MAAMP,OAAO,EAA1B,CAF4B,CAI5B;;AACA,QAAMQ,QAAQ,GAAG,MAAMP,WAAW,EAAlC;;AACA,MAAI;AACA;AACAO,IAAAA,QAAQ,CAACC,MAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,UAAb;AAEA,UAAMN,QAAQ,GAAG,MAAMG,QAAQ,CAACI,OAAT,CAAiB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjB,CAAvB,CALA,CAOA;;AACA,UAAMC,OAAO,GAAGC,QAAQ,EAAC,MAAMR,IAAI,CAACS,GAAL,CAASC,UAAT,EAAP,EAAxB;AACA,WAAOZ,QAAP;AACH,GAVD,CAUE,OAAOa,CAAP,EAAU;AACRR,IAAAA,OAAO,CAACC,GAAR,CAAa;mEAAb;AAEAD,IAAAA,OAAO,CAACC,GAAR,CAAYO,CAAZ;AACH,GApB2B,CAsB5B;AAEA;AACA;;AAEH","sourcesContent":["import {getWeb3} from \"../getWeb3\"\nimport {getEthereum} from \"../getEthereum\"\n\nexport default (state, action) =>{\n    switch(action.type){\n        case 'CONNECT_TO_WALLET':\n            return{\n                ...state,\n                accounts: connectToWallet()\n            }\n        default:\n            return state;\n    }\n}\n\nasync function connectToWallet(){\n    // Get network provider and web3 instance.\n    const web3 = await getWeb3()\n\n    // Try and enable accounts (connect metamask)\n    const ethereum = await getEthereum()\n    try {\n        //const ethereum = await getEthereum()\n        ethereum.enable()\n        console.log(`Metamask`)\n\n        const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n\n        // Get the current chain id\n        const chainid = parseInt(await web3.eth.getChainId())\n        return accounts\n    } catch (e) {\n        console.log(`Could not enable accounts. Interaction with contracts not available.\n        Use a modern browser with a Web3 plugin to fix this issue.`)\n        console.log(e)\n    }\n\n    //const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n\n    // Get the current chain id\n    //const chainid = parseInt(await web3.eth.getChainId())\n    \n}"]},"metadata":{},"sourceType":"module"}