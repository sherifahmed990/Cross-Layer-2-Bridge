{"ast":null,"code":"import React, { useState, useContext, useEffect } from \"react\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { getWeb3 } from \"./getWeb3\";\nimport map from \"./artifacts/deployments/map.json\";\nimport { getEthereum } from \"./getEthereum\";\nimport { GlobalContext } from './context/GlobalState';\n\nlet loadContract = async (chain, contractName, address) => {\n  // Load a deployed contract instance into a web3 contract object\n  const web3 = await getWeb3(); // Load the artifact with the specified address\n\n  let contractArtifact;\n\n  try {\n    contractArtifact = await import(`./artifacts/deployments/${chain}/${address}.json`);\n  } catch (e) {\n    console.log(`Failed to load contract artifact \"./artifacts/deployments/${chain}/${address}.json\"`);\n    return undefined;\n  }\n\n  return new web3.eth.Contract(contractArtifact.abi, address);\n};\n\nexport const getContract = async () => {\n  const web3 = await getWeb3(); // Try and enable accounts (connect metamask)\n\n  const ethereum = await getEthereum();\n\n  try {\n    //const ethereum = await getEthereum()\n    ethereum.enable();\n    console.log(`Metamask 2`);\n    const accounts = await ethereum.request({\n      method: 'eth_requestAccounts'\n    }); // Get the current chain id\n\n    const chainid = parseInt((await web3.eth.getChainId())); // <=42 to exclude Kovan, <42 to include kovan\n\n    if (chainid != 69) {\n      try {\n        await ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: '69'\n          }]\n        });\n      } catch (switchError) {\n        // This error code indicates that the chain has not been added to MetaMask.\n        if (switchError.code === 4902) {\n          try {\n            await ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainId: '0x69',\n                chainName: 'Optimism Kovan',\n                rpcUrls: ['https://kovan.optimism.io'],\n                blockExplorerUrls: ['https://kovan-optimistic.etherscan.io']\n              }]\n            });\n          } catch (addError) {\n            console.log(addError);\n          }\n        } // handle other \"switch\" errors\n\n      }\n    }\n\n    const chainIdHex = web3.currentProvider.chainId;\n    const chainIdDec = await web3.eth.getChainId();\n    console.log('ChainId Hex and decimal');\n    console.log(chainIdHex);\n    console.log('ChainId Hex and decimal2');\n    console.log(chainIdDec);\n    console.log('ChainId Hex and decimal3');\n    var _chainID = 0;\n\n    if (chainid === 42) {\n      _chainID = 42;\n    }\n\n    if (chainid === 1337) {\n      _chainID = \"dev\";\n    }\n\n    if (chainid === 69) {\n      _chainID = 69;\n    }\n\n    console.log(_chainID);\n    const ssbridge = await loadContract(_chainID, \"SourceDomainSideBridge\", \"0x4f7459eFf03cD8C19B5a442d7c9b675A05f66fbf\"); //let root = await ssbridge.methods.get_deposit_root().call()\n\n    console.log('ssbridge');\n    console.log(ssbridge);\n\n    if (!ssbridge) {\n      return;\n    }\n\n    return ssbridge;\n  } catch (e) {\n    console.log(`Could not enable accounts. Interaction with contracts not available.\n        Use a modern browser with a Web3 plugin to fix this issue.`);\n    console.log(e);\n  }\n};","map":{"version":3,"sources":["/home/sherif/code/crypto/bridge/react/client/src/getContract.js"],"names":["React","useState","useContext","useEffect","getWeb3","map","getEthereum","GlobalContext","loadContract","chain","contractName","address","web3","contractArtifact","e","console","log","undefined","eth","Contract","abi","getContract","ethereum","enable","accounts","request","method","chainid","parseInt","getChainId","params","chainId","switchError","code","chainName","rpcUrls","blockExplorerUrls","addError","chainIdHex","currentProvider","chainIdDec","_chainID","ssbridge"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,OAAO,sDAAP;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAOC,GAAP,MAAgB,kCAAhB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,aAAR,QAA4B,uBAA5B;;AAGA,IAAIC,YAAY,GAAG,OAAOC,KAAP,EAAcC,YAAd,EAA4BC,OAA5B,KAAwC;AACvD;AACA,QAAMC,IAAI,GAAG,MAAMR,OAAO,EAA1B,CAFuD,CAIvD;;AACA,MAAIS,gBAAJ;;AACA,MAAI;AACAA,IAAAA,gBAAgB,GAAG,MAAM,OAAQ,2BAA0BJ,KAAM,IAAGE,OAAQ,OAAnD,CAAzB;AACH,GAFD,CAEE,OAAOG,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAa,6DAA4DP,KAAM,IAAGE,OAAQ,QAA1F;AACA,WAAOM,SAAP;AACH;;AAED,SAAO,IAAIL,IAAI,CAACM,GAAL,CAASC,QAAb,CAAsBN,gBAAgB,CAACO,GAAvC,EAA4CT,OAA5C,CAAP;AACH,CAdD;;AAeA,OAAO,MAAMU,WAAW,GAAG,YAAY;AAEnC,QAAMT,IAAI,GAAG,MAAMR,OAAO,EAA1B,CAFmC,CAKnC;;AACA,QAAMkB,QAAQ,GAAG,MAAMhB,WAAW,EAAlC;;AACA,MAAI;AACA;AACAgB,IAAAA,QAAQ,CAACC,MAAT;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAb;AAEA,UAAMQ,QAAQ,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAAiB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjB,CAAvB,CALA,CAOA;;AACA,UAAMC,OAAO,GAAGC,QAAQ,EAAC,MAAMhB,IAAI,CAACM,GAAL,CAASW,UAAT,EAAP,EAAxB,CARA,CAUA;;AACA,QAAIF,OAAO,IAAI,EAAf,EAAmB;AACf,UAAI;AACA,cAAML,QAAQ,CAACG,OAAT,CAAiB;AACrBC,UAAAA,MAAM,EAAE,4BADa;AAErBI,UAAAA,MAAM,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAD;AAFa,SAAjB,CAAN;AAID,OALH,CAKI,OAAOC,WAAP,EAAoB;AACpB;AACA,YAAIA,WAAW,CAACC,IAAZ,KAAqB,IAAzB,EAA+B;AAC7B,cAAI;AACF,kBAAMX,QAAQ,CAACG,OAAT,CAAiB;AACrBC,cAAAA,MAAM,EAAE,yBADa;AAErBI,cAAAA,MAAM,EAAE,CACN;AACIC,gBAAAA,OAAO,EAAE,MADb;AAEIG,gBAAAA,SAAS,EAAE,gBAFf;AAGIC,gBAAAA,OAAO,EAAE,CAAC,2BAAD,CAHb;AAIIC,gBAAAA,iBAAiB,EAAE,CAAC,uCAAD;AAJvB,eADM;AAFa,aAAjB,CAAN;AAWD,WAZD,CAYE,OAAOC,QAAP,EAAiB;AACjBtB,YAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;AACD;AACF,SAlBmB,CAmBpB;;AACD;AAEN;;AAED,UAAMC,UAAU,GAAG1B,IAAI,CAAC2B,eAAL,CAAqBR,OAAxC;AACA,UAAMS,UAAU,GAAG,MAAM5B,IAAI,CAACM,GAAL,CAASW,UAAT,EAAzB;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYsB,UAAZ;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYwB,UAAZ;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEF,QAAIyB,QAAQ,GAAG,CAAf;;AACA,QAAId,OAAO,KAAK,EAAhB,EAAmB;AACfc,MAAAA,QAAQ,GAAG,EAAX;AACH;;AACD,QAAId,OAAO,KAAK,IAAhB,EAAqB;AACjBc,MAAAA,QAAQ,GAAG,KAAX;AACH;;AACD,QAAId,OAAO,KAAK,EAAhB,EAAmB;AACjBc,MAAAA,QAAQ,GAAG,EAAX;AACH;;AACC1B,IAAAA,OAAO,CAACC,GAAR,CAAYyB,QAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMlC,YAAY,CAACiC,QAAD,EAAU,wBAAV,EAAoC,4CAApC,CAAnC,CA5DE,CA6DF;;AACA1B,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;;AACA,QAAI,CAACA,QAAL,EAAe;AACX;AACH;;AAED,WAAOA,QAAP;AACD,GArED,CAqEE,OAAO5B,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAa;mEAAb;AAEAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AAEJ,CAlFM","sourcesContent":["import React, {useState,useContext,useEffect} from \"react\"\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {getWeb3} from \"./getWeb3\"\nimport map from \"./artifacts/deployments/map.json\"\nimport {getEthereum} from \"./getEthereum\"\nimport {GlobalContext} from './context/GlobalState';\n\n\nlet loadContract = async (chain, contractName, address) => {\n    // Load a deployed contract instance into a web3 contract object\n    const web3 = await getWeb3()\n\n    // Load the artifact with the specified address\n    let contractArtifact\n    try {\n        contractArtifact = await import(`./artifacts/deployments/${chain}/${address}.json`)\n    } catch (e) {\n        console.log(`Failed to load contract artifact \"./artifacts/deployments/${chain}/${address}.json\"`)\n        return undefined\n    }\n\n    return new web3.eth.Contract(contractArtifact.abi, address)\n}\nexport const getContract = async () => {\n\n    const web3 = await getWeb3()\n    \n    \n    // Try and enable accounts (connect metamask)\n    const ethereum = await getEthereum()\n    try {\n        //const ethereum = await getEthereum()\n        ethereum.enable()\n        console.log(`Metamask 2`)\n        \n        const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Get the current chain id\n        const chainid = parseInt(await web3.eth.getChainId())\n        \n        // <=42 to exclude Kovan, <42 to include kovan\n        if (chainid != 69) {\n            try {\n                await ethereum.request({\n                  method: 'wallet_switchEthereumChain',\n                  params: [{ chainId: '69' }],\n                });\n              } catch (switchError) {\n                // This error code indicates that the chain has not been added to MetaMask.\n                if (switchError.code === 4902) {\n                  try {\n                    await ethereum.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [\n                        {\n                            chainId: '0x69',\n                            chainName: 'Optimism Kovan',\n                            rpcUrls: ['https://kovan.optimism.io'],\n                            blockExplorerUrls: ['https://kovan-optimistic.etherscan.io'],\n                        },\n                      ],\n                    });\n                  } catch (addError) {\n                    console.log(addError)\n                  }\n                }\n                // handle other \"switch\" errors\n              }\n\n        }\n      \n        const chainIdHex = web3.currentProvider.chainId;\n        const chainIdDec = await web3.eth.getChainId();\n        console.log('ChainId Hex and decimal')\n        console.log(chainIdHex);\n        console.log('ChainId Hex and decimal2')\n        console.log(chainIdDec);\n        console.log('ChainId Hex and decimal3')\n      \n      var _chainID = 0;\n      if (chainid === 42){\n          _chainID = 42;\n      }\n      if (chainid === 1337){\n          _chainID = \"dev\"\n      }\n      if (chainid === 69){\n        _chainID = 69;\n    }\n      console.log(_chainID)\n      const ssbridge = await loadContract(_chainID,\"SourceDomainSideBridge\", \"0x4f7459eFf03cD8C19B5a442d7c9b675A05f66fbf\")\n      //let root = await ssbridge.methods.get_deposit_root().call()\n      console.log('ssbridge')\n      console.log(ssbridge)\n      if (!ssbridge) {\n          return\n      }\n     \n      return ssbridge\n    } catch (e) {\n        console.log(`Could not enable accounts. Interaction with contracts not available.\n        Use a modern browser with a Web3 plugin to fix this issue.`)\n        console.log(e)\n    }\n\n}"]},"metadata":{},"sourceType":"module"}