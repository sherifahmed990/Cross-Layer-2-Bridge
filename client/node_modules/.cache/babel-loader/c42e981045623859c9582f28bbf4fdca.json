{"ast":null,"code":"import Web3 from \"web3\";\nimport { getEthereum } from \"./getEthereum\";\nexport const getWeb3 = async () => {\n  //const ethereum = await getEthereum()\n\n  /*if (ethereum) {\n      web3 = new Web3(ethereum)\n  } else if (window.web3) {\n      web3 = window.web3\n  } else {\n      const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n      );\n      web3 = new Web3(provider)\n  }*/\n  const provider = new Web3.providers.HttpProvider(\"https://kovan.infura.io/v3/188fc537abca4354820a218c0de66475\");\n  const web3 = new Web3(provider);\n  /*\n  if(window.ethereum) {\n      const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n      const chainId = await window.ethereum.request({ method: 'eth_chainId'});\n      alert(\"MetaMask Detected\");\n     } else {\n       // Show alert if Ethereum provider is not detected\n       alert(\"Please install Mask\");\n     }\n  */\n\n  /*const provider = new Web3.providers.HttpProvider(\n      \"https://kovan.infura.io/v3/188fc537abca4354820a218c0de66475\"\n  );\n  web3 = new Web3(provider)*/\n\n  return web3;\n};","map":{"version":3,"sources":["/home/sherif/code/crypto/bridge/react/client/src/getWeb3.js"],"names":["Web3","getEthereum","getWeb3","provider","providers","HttpProvider","web3"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AAEA,OAAO,MAAMC,OAAO,GAAG,YAAY;AAE/B;;AAEA;;;;;;;;;;AAUA,QAAMC,QAAQ,GAAG,IAAIH,IAAI,CAACI,SAAL,CAAeC,YAAnB,CACb,6DADa,CAAjB;AAGA,QAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASG,QAAT,CAAb;AACA;;;;;;;;;;;AAUA;;;;;AAKA,SAAOG,IAAP;AACH,CAlCM","sourcesContent":["import Web3 from \"web3\";\nimport {getEthereum} from \"./getEthereum\";\n\nexport const getWeb3 = async () => {\n\n    //const ethereum = await getEthereum()\n    \n    /*if (ethereum) {\n        web3 = new Web3(ethereum)\n    } else if (window.web3) {\n        web3 = window.web3\n    } else {\n        const provider = new Web3.providers.HttpProvider(\n            \"http://127.0.0.1:8545\"\n        );\n        web3 = new Web3(provider)\n    }*/\n    const provider = new Web3.providers.HttpProvider(\n        \"https://kovan.infura.io/v3/188fc537abca4354820a218c0de66475\"\n    );\n    const web3 = new Web3(provider)\n    /*\n    if(window.ethereum) {\n        const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n        const chainId = await window.ethereum.request({ method: 'eth_chainId'});\n        alert(\"MetaMask Detected\");\n       } else {\n         // Show alert if Ethereum provider is not detected\n         alert(\"Please install Mask\");\n       }\n*/\n    /*const provider = new Web3.providers.HttpProvider(\n        \"https://kovan.infura.io/v3/188fc537abca4354820a218c0de66475\"\n    );\n    web3 = new Web3(provider)*/\n\n    return web3\n}"]},"metadata":{},"sourceType":"module"}